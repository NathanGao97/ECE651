/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.zg79.battleship;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;

/**
 * This class runs the battleship program
 */
public class App {

  private TextPlayer player1;
  private TextPlayer player2;
  
  /**
   * Constructs a battleship program with two players  
   */
  public App(TextPlayer player1, TextPlayer player2) {
    this.player1 = player1;
    this.player2 = player2;
  }

  /**
   * This generate the make placement phase for players during the battleship game 
   */
  public void doPlacementPhase() throws IOException {
    player1.doPlacementPhase();
    System.out.print("\n");
    player2.doPlacementPhase();
    System.out.print("\n");
  }

  /**
   * This let two players take turns to attck,
   * until one of the player win the game
   */
  public void doAttackingPhase() throws IOException {
    // name of two palyers
    String name1 = player1.getName();
    String name2 = player2.getName();
    // board of two players
    Board<Character> board1 = player1.getBoard();
    Board<Character> board2 = player2.getBoard();
    // display information of board of two players
    BoardTextView view1 = new BoardTextView(board1);
    BoardTextView view2 = new BoardTextView(board2);
    // winning prompt of two players
    String win1 = "Player " + name1 + " win!";
    String win2 = "Player " + name2 + " win!";
    while (true) { // take turns to attack
      player1.playOneTurn(board2, view2, name2); // player1's turn
      if (player2.checkLose()) { // check if player2 has lost
        System.out.println(win1);
        break;
      }
      System.out.print("\n");
      player2.playOneTurn(board1, view1, name1); // player2's turn
      if (player1.checkLose()) { // check if player1 has lost
        System.out.println(win2);
        break;
      }
      System.out.print("\n");
    }
  }

  /**
   * This get the identity of a player,
   * which is either human or computer
   */
  public static TextPlayer playerIdentification(String name, BufferedReader inputSource, PrintStream out, V2ShipFactory factory) throws IOException {
    String prompt = "Please choose the identity of Player " + name + ":\n" +
      "A. Human\n" +
      "B. Computer\n";
    System.out.println(prompt);
    String sUp = null;

    // get the choice from user
    while(true) { // repeat until get a valid choice
      String s = inputSource.readLine();
      sUp = s.toUpperCase();
      if (!sUp.equals("A") && !sUp.equals("B")) { // invalid input
        System.out.println("Invalid choice! Please make your choice again!");
      }
      else {
        break;
      } 
    }
    if (sUp.equals("A")) { // construct a TextPlayer
      Board<Character> b = new BattleShipBoard<Character>(10, 20, 'X');
      TextPlayer player = new TextPlayer(name, b, inputSource, out, factory);
      return player;
    }
    else { // construct a ComputerPlayer
      Board<Character> b = new BattleShipBoard<Character>(10, 20, 'X');
      ComputerPlayer player = new ComputerPlayer(name, b, inputSource, out, factory);
      return player;
    }
  }
  
  /**
   * This generate a battleship program  
   */
  public static void main(String[] args) throws IOException {
    InputStreamReader r = new InputStreamReader(System.in);
    BufferedReader br = new BufferedReader(r);
    PrintStream out = System.out;
    V2ShipFactory factory = new V2ShipFactory();
    TextPlayer player1 = playerIdentification("A", br, out, factory); // get identity for player A
    TextPlayer player2 = playerIdentification("B", br, out, factory); // get identity for player B    
    App app = new App(player1, player2);
    app.doPlacementPhase(); // place ships on the board
    app.doAttackingPhase(); // two players take turns to attack until one of them win the game
  }
}
